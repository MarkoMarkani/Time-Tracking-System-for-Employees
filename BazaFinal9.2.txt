-- Generated by Oracle SQL Developer Data Modeler 18.1.0.082.1035
--   at:        2019-03-09 16:11:32 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE break (
    breakid        INTEGER NOT NULL,
    workingdayid   INTEGER NOT NULL,
    breakstarted   TIMESTAMP NOT NULL,
    breakended     TIMESTAMP
);

ALTER TABLE break ADD CONSTRAINT break_pk PRIMARY KEY ( breakid );

CREATE TABLE employee (
    employeeid   INTEGER NOT NULL,
    firstname    VARCHAR2(50) NOT NULL,
    lastname     VARCHAR2(50) NOT NULL,
    username     VARCHAR2(50) NOT NULL,
    email        VARCHAR2(50) NOT NULL,
    password     VARCHAR2(50) NOT NULL,
    jobid        INTEGER NOT NULL,
    hiredate     DATE NOT NULL,
    salary       NUMBER NOT NULL,
    active       CHAR(1) NOT NULL
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employeeid );

ALTER TABLE employee ADD CONSTRAINT employee_username_un UNIQUE ( username );

ALTER TABLE employee ADD CONSTRAINT employee_email_un UNIQUE ( email );

CREATE TABLE holiday (
    holidayid       INTEGER NOT NULL,
    holidaydate       DATE NOT NULL,
    name	    VARCHAR2(50) NOT NULL,
    holidaytypeid   INTEGER,
    weekdayid       INTEGER NOT NULL
);

ALTER TABLE holiday ADD CONSTRAINT holiday_pk PRIMARY KEY ( holidayid );

CREATE TABLE holidayperemployee (
    holidayperemployeeid   INTEGER NOT NULL,
    employeeid             INTEGER NOT NULL,
   holidaydate            DATE NOT NULL,
    name		   VARCHAR2(50) NOT NULL,
    weekdayid              INTEGER NOT NULL,
    holidaytypeid          INTEGER
);

ALTER TABLE holidayperemployee ADD CONSTRAINT holidayperemployee_pk PRIMARY KEY ( holidayperemployeeid );

CREATE TABLE holidaytype (
    holidaytypeid   INTEGER NOT NULL,
    name            VARCHAR2(50) NOT NULL
);

ALTER TABLE holidaytype ADD CONSTRAINT holidaytype_pk PRIMARY KEY ( holidaytypeid );

CREATE TABLE job (
    jobid           INTEGER NOT NULL,
    name            VARCHAR2(50) NOT NULL,
    commissionpct   NUMBER NOT NULL
);

ALTER TABLE job ADD CONSTRAINT job_pk PRIMARY KEY ( jobid );

CREATE TABLE jobhistory (
    jobhistoryid   INTEGER NOT NULL,
    employeeid     INTEGER NOT NULL,
    jobid          INTEGER NOT NULL,
    startdate      DATE NOT NULL,
    enddate        DATE
);

ALTER TABLE jobhistory ADD CONSTRAINT jobhistory_pk PRIMARY KEY ( jobhistoryid );

CREATE TABLE payment (
    paymentid    INTEGER NOT NULL,
    employeeid   INTEGER NOT NULL,
    overtime     NUMBER,
    fromdate     DATE NOT NULL,
    todate       DATE NOT NULL,
    total        NUMBER NOT NULL
);

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( paymentid );

CREATE TABLE vacation (
    vacationid   INTEGER NOT NULL,
    employeeid   INTEGER NOT NULL,
    fromdate     DATE NOT NULL,
    todate       DATE NOT NULL
);

ALTER TABLE vacation ADD CONSTRAINT vacation_pk PRIMARY KEY ( vacationid );

CREATE TABLE weekday (
    weekdayid   INTEGER NOT NULL,
    name        VARCHAR2(15) NOT NULL
);

ALTER TABLE weekday ADD CONSTRAINT weekday_pk PRIMARY KEY ( weekdayid );

CREATE TABLE workingday (
    workingdayid   INTEGER NOT NULL,
    employeeid     INTEGER NOT NULL,
    checkin        TIMESTAMP NOT NULL,
    checkout       TIMESTAMP,
    weekdayid      INTEGER NOT NULL
);

ALTER TABLE workingday ADD CONSTRAINT workingday_pk PRIMARY KEY ( workingdayid );

ALTER TABLE break
    ADD CONSTRAINT break_workingday_fk FOREIGN KEY ( workingdayid )
        REFERENCES workingday ( workingdayid );

ALTER TABLE employee
    ADD CONSTRAINT employee_job_fk FOREIGN KEY ( jobid )
        REFERENCES job ( jobid );

ALTER TABLE holiday
    ADD CONSTRAINT holiday_holidaytype_fk FOREIGN KEY ( holidaytypeid )
        REFERENCES holidaytype ( holidaytypeid )ON DELETE SET NULL ENABLE;

ALTER TABLE holiday
    ADD CONSTRAINT holiday_weekday_fk FOREIGN KEY ( weekdayid )
        REFERENCES weekday ( weekdayid );

ALTER TABLE holidayperemployee
    ADD CONSTRAINT holidayperempl_employee_fk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE holidayperemployee
    ADD CONSTRAINT holidayperempl_holidaytype_fk FOREIGN KEY ( holidaytypeid )
        REFERENCES holidaytype ( holidaytypeid )ON DELETE SET NULL ENABLE;

ALTER TABLE holidayperemployee
    ADD CONSTRAINT holidayperempl_weekday_fk FOREIGN KEY ( weekdayid )
        REFERENCES weekday ( weekdayid );

ALTER TABLE jobhistory
    ADD CONSTRAINT jobhistory_employee_fk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE jobhistory
    ADD CONSTRAINT jobhistory_job_fk FOREIGN KEY ( jobid )
        REFERENCES job ( jobid );

ALTER TABLE payment
    ADD CONSTRAINT payment_employee_fk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE vacation
    ADD CONSTRAINT vacation_employee_fk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE workingday
    ADD CONSTRAINT workingday_employee_fk FOREIGN KEY ( employeeid )
        REFERENCES employee ( employeeid );

ALTER TABLE workingday
    ADD CONSTRAINT workingday_weekday_fk FOREIGN KEY ( weekdayid )
        REFERENCES weekday ( weekdayid );

CREATE SEQUENCE break_breakid_seq 
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER break_breakid_trg BEFORE
    INSERT ON break
    FOR EACH ROW
    WHEN ( new.breakid IS NULL OR new.breakid < 0)
BEGIN
    :new.breakid := break_breakid_seq.nextval;
END;
/

CREATE SEQUENCE employee_employeeid_seq 
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER employee_employeeid_trg BEFORE
    INSERT ON employee
    FOR EACH ROW
    WHEN ( new.employeeid IS NULL OR new.employeeid < 0)
BEGIN
    :new.employeeid := employee_employeeid_seq.nextval;
END;
/

CREATE SEQUENCE holiday_holidayid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER holiday_holidayid_trg BEFORE
    INSERT ON holiday
    FOR EACH ROW
    WHEN ( new.holidayid IS NULL OR new.holidayid < 0)
BEGIN
    :new.holidayid := holiday_holidayid_seq.nextval;
END;
/

CREATE SEQUENCE holidayperemployee_holidaypere  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER holidayperemployee_holidaypere BEFORE
    INSERT ON holidayperemployee
    FOR EACH ROW
    WHEN ( new.holidayperemployeeid IS NULL OR new.holidayperemployeeid < 0)
BEGIN
    :new.holidayperemployeeid := holidayperemployee_holidaypere.nextval;
END;
/

CREATE SEQUENCE holidaytype_holidaytypeid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER holidaytype_holidaytypeid_trg BEFORE
    INSERT ON holidaytype
    FOR EACH ROW
    WHEN ( new.holidaytypeid IS NULL OR new.holidaytypeid < 0)
BEGIN
    :new.holidaytypeid := holidaytype_holidaytypeid_seq.nextval;
END;
/

CREATE SEQUENCE job_jobid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER job_jobid_trg BEFORE
    INSERT ON job
    FOR EACH ROW
    WHEN ( new.jobid IS NULL OR new.jobid < 0)
BEGIN
    :new.jobid := job_jobid_seq.nextval;
END;
/

CREATE SEQUENCE jobhistory_jobhistoryid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER jobhistory_jobhistoryid_trg BEFORE
    INSERT ON jobhistory
    FOR EACH ROW
    WHEN ( new.jobhistoryid IS NULL OR new.jobhistoryid < 0)
BEGIN
    :new.jobhistoryid := jobhistory_jobhistoryid_seq.nextval;
END;
/

CREATE SEQUENCE payment_paymentid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER payment_paymentid_trg BEFORE
    INSERT ON payment
    FOR EACH ROW
    WHEN ( new.paymentid IS NULL OR new.paymentid < 0)
BEGIN
    :new.paymentid := payment_paymentid_seq.nextval;
END;
/

CREATE SEQUENCE vacation_vacationid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER vacation_vacationid_trg BEFORE
    INSERT ON vacation
    FOR EACH ROW
    WHEN ( new.vacationid IS NULL OR new.vacationid < 0)
BEGIN
    :new.vacationid := vacation_vacationid_seq.nextval;
END;
/

CREATE SEQUENCE weekday_weekdayid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER weekday_weekdayid_trg BEFORE
    INSERT ON weekday
    FOR EACH ROW
    WHEN ( new.weekdayid IS NULL OR new.weekdayid < 0)
BEGIN
    :new.weekdayid := weekday_weekdayid_seq.nextval;
END;
/

CREATE SEQUENCE workingday_workingdayid_seq  
           MINVALUE 1 
           MAXVALUE 999999999999999999999999999 
           START WITH 1
           INCREMENT BY 1 
           NOCACHE 
           NOCYCLE;

CREATE OR REPLACE TRIGGER workingday_workingdayid_trg BEFORE
    INSERT ON workingday
    FOR EACH ROW
    WHEN ( new.workingdayid IS NULL OR new.workingdayid < 0)
BEGIN
    :new.workingdayid := workingday_workingdayid_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         11
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
